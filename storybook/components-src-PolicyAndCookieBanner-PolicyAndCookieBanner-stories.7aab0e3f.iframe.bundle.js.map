{"version":3,"file":"components-src-PolicyAndCookieBanner-PolicyAndCookieBanner-stories.7aab0e3f.iframe.bundle.js","mappings":";;;;;;;;;;AAeA;AACA;AACA;ACDA;;ADOA;;;ACPA","sources":["webpack://essex-toolkit-stories/../components/src/PolicyAndCookieBanner/PolicyAndCookieBanner.styles.ts","webpack://essex-toolkit-stories/../components/src/PolicyAndCookieBanner/PolicyAndCookieBanner.tsx"],"sourcesContent":["/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport styled from 'styled-components'\n\nexport const Container = styled.footer`\n\twidth: 100%;\n\theight: 32px;\n\tfont-size: 12px;\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\tgap: 18px;\n\talign-items: center;\n\tcolor: ${({ theme }) => theme.palette.neutralSecondary};\n\tbackground: ${({ theme }) => theme.palette.neutralLight};\n\tborder-top: 1px solid ${({ theme }) => theme.palette.neutralTertiaryAlt};\n`\n\nexport const LinkDiv = styled.div`\n\tcursor: pointer;\n`\nexport const LinkA = styled.a`\n\tcursor: pointer;\n\ttext-decoration: none !important;\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { Link, Text, useTheme } from '@fluentui/react'\nimport type { CSSProperties, FC } from 'react'\nimport { memo, useMemo } from 'react'\n\nimport { useLoadMSFTCookieScript } from './PolicyAndCookieBanner.hooks.js'\nimport { Container } from './PolicyAndCookieBanner.styles.js'\nimport type {\n\tPolicyAndCookieBannerProps,\n\tPolicyLinkDetails,\n\tPolicyLinkProps,\n} from './PolicyAndCookieBanner.types.js'\n\nconst containerStyles: CSSProperties = {\n\tdisplay: 'flex',\n\tjustifyContent: 'center',\n\talignItems: 'center',\n\tgap: '20px',\n\tpadding: '10px',\n}\n\nexport const defaultBannerLinks: Array<PolicyLinkDetails> = [\n\t{\n\t\tname: 'Privacy & Cookies',\n\t\thref: ' https://go.microsoft.com/fwlink/?LinkId=521839',\n\t},\n\t{\n\t\tname: 'Terms of Use',\n\t\thref: 'https://go.microsoft.com/fwlink/?LinkID=760869',\n\t},\n\t{\n\t\tname: 'Trademarks',\n\t\thref: 'https://www.microsoft.com/en-us/legal/intellectualproperty/Trademarks/EN-US.aspx',\n\t},\n\t{\n\t\tname: 'Contact Us',\n\t\thref: 'https://go.microsoft.com/?linkid=2028325',\n\t},\n\t{\n\t\tname: 'Code of Conduct',\n\t\thref: 'https://opensource.microsoft.com/codeofconduct/',\n\t},\n\t{\n\t\tname: `©️ ${new Date().getFullYear()} Microsoft`,\n\t\thref: 'https://www.microsoft.com/en-us/legal/intellectualproperty/copyright',\n\t},\n]\n\nexport const PolicyAndCookieBanner: FC<PolicyAndCookieBannerProps> = memo(\n\tfunction CookieConsentProvider({\n\t\tlanguage = navigator.language ?? 'en-US',\n\t\tonConsentChange = () => undefined,\n\t\tonError,\n\t\tclassName,\n\t\tstyles,\n\t\tlinks = defaultBannerLinks,\n\t}) {\n\t\tconst theme = useTheme()\n\t\tconst divStyles: CSSProperties = useMemo(() => {\n\t\t\treturn {\n\t\t\t\t...containerStyles,\n\t\t\t\t...styles,\n\t\t\t}\n\t\t}, [styles])\n\n\t\tconst policyLinks = useMemo(() => {\n\t\t\treturn links.map(({ name, href, onClick, hide }, i) => {\n\t\t\t\treturn hide === false || hide === undefined ? (\n\t\t\t\t\t<PolicyLink\n\t\t\t\t\t\tkey={name}\n\t\t\t\t\t\tdivider={i !== 0}\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t\thref={href}\n\t\t\t\t\t\tonClick={onClick}\n\t\t\t\t\t/>\n\t\t\t\t) : null\n\t\t\t})\n\t\t}, [links])\n\n\t\tconst consentManager = useLoadMSFTCookieScript({\n\t\t\tlanguage,\n\t\t\ttheme: theme.isInverted ? 'dark' : 'light',\n\t\t\tonConsentChange,\n\t\t\tonError,\n\t\t})\n\n\t\treturn (\n\t\t\t<Container className={className} style={divStyles}>\n\t\t\t\t{consentManager?.isConsentRequired && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<PolicyLink\n\t\t\t\t\t\t\tname=\"Manage Cookies\"\n\t\t\t\t\t\t\tid=\"MSFTManageCookiesLink\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tconsentManager?.manageConsent()\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Text variant=\"tiny\">|</Text>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t\t{policyLinks}\n\t\t\t</Container>\n\t\t)\n\t},\n)\nPolicyAndCookieBanner.displayName = 'PolicyAndCookieBanner'\n\nconst PolicyLink: FC<PolicyLinkProps> = memo(function PolicyLink({\n\tname,\n\thref,\n\tonClick,\n\tdivider = false,\n\tid,\n}) {\n\treturn href == null || href === '' ? (\n\t\t<>\n\t\t\t{divider && <Text variant=\"tiny\">|</Text>}\n\t\t\t<Text variant=\"smallPlus\">\n\t\t\t\t<Link id={id} target=\"_blank\" onClick={onClick}>\n\t\t\t\t\t{name}\n\t\t\t\t</Link>\n\t\t\t</Text>\n\t\t</>\n\t) : (\n\t\t<>\n\t\t\t{divider && <Text variant=\"tiny\">|</Text>}\n\t\t\t<Text variant=\"smallPlus\">\n\t\t\t\t<Link id={id} href={href} target=\"_blank\">\n\t\t\t\t\t{name}\n\t\t\t\t</Link>\n\t\t\t</Text>\n\t\t</>\n\t)\n})\n"],"names":[],"sourceRoot":""}