/*! For license information please see components-src-ColumnarMenu-ColumnarMenu-stories.3fcad276.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkessex_toolkit_stories=self.webpackChunkessex_toolkit_stories||[]).push([[8472],{"../components/src/ColumnarMenu/ColumnarMenu.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Customized:()=>Customized,Overflow:()=>Overflow,Primary:()=>Primary,WithButtons:()=>WithButtons,default:()=>ColumnarMenu_stories});var jsx_runtime=__webpack_require__("../../.yarn/cache/react-npm-18.3.1-af38f3c1ae-261137d3f3.zip/node_modules/react/jsx-runtime.js"),lib_commonjs=__webpack_require__("../../.yarn/__virtual__/@fluentui-react-virtual-de7476e3d6/0/cache/@fluentui-react-npm-8.118.9-93c5d7c0a7-1806e7182f.zip/node_modules/@fluentui/react/lib-commonjs/index.js"),react=__webpack_require__("../../.yarn/cache/react-npm-18.3.1-af38f3c1ae-261137d3f3.zip/node_modules/react/index.js"),merge=__webpack_require__("../../.yarn/cache/lodash-es-npm-4.17.21-b45832dfce-03f39878ea.zip/node_modules/lodash-es/merge.js");const defaultButtonStyles={root:{width:"100%",paddingLeft:4,paddingRight:4,textAlign:"left"},textContainer:{overflow:"hidden"},label:{fontWeight:"normal",textOverflow:"ellipsis",overflow:"hidden"}};const ColumnarMenuList=(0,react.memo)((function ColumnarMenuList(props){const{items,defaultMenuItemRenderer}=props,styles=function useStyles(styles){const theme=(0,lib_commonjs.useTheme)();return(0,react.useMemo)((()=>({header:{color:theme.palette.themePrimary,padding:"8px 12px 0 12px",marginBottom:8,fontWeight:700,...styles?.header},menu:{padding:0,gap:12,...styles?.menu},options:{display:"flex",...styles?.options},column:{minWidth:120,...styles?.column},item:(0,merge.A)({root:{paddingLeft:8,height:28,lineHeight:28},item:{listStyleType:"none"}},styles?.item)})),[theme,styles])}(props.styles),formatted=function useFormattedItems(items,styles){return(0,react.useMemo)((()=>items.filter((i=>!i?.data?.button)).map((item=>(0,merge.A)({},item,{itemProps:{styles},sectionProps:item.sectionProps?{items:item.sectionProps.items.map((subitem=>(0,merge.A)({},subitem,{itemProps:{styles}})))}:void 0})))),[items,styles])}(items,styles.item),buttons=function useButtonItems(items,styles){return(0,react.useMemo)((()=>items.filter((item=>!!item?.data?.button&&(item.itemProps={styles},item)))),[items,styles])}(items,styles.item),verifySeparator=(0,react.useCallback)((show=>show&&(0,jsx_runtime.jsx)(lib_commonjs.Separator,{})),[]);return(0,jsx_runtime.jsxs)("div",{style:styles.menu,children:[buttons?.map((b=>(0,jsx_runtime.jsxs)("div",{children:[verifySeparator(b.data?.topDivider),defaultMenuItemRenderer(b),verifySeparator(b.data?.bottomDivider)]},`columnar-menu-button-${b.key}`))),(0,jsx_runtime.jsx)("div",{style:styles.options,children:formatted.map((item=>{const{key}=item;return(0,jsx_runtime.jsxs)("div",{style:styles.column,children:[(0,jsx_runtime.jsx)("div",{style:styles.header,children:item.sectionProps?.title}),item.itemType===lib_commonjs.ContextualMenuItemType.Section?(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[verifySeparator(item.sectionProps?.topDivider),item.sectionProps?.items.map((subitem=>defaultMenuItemRenderer(subitem))),verifySeparator(item.sectionProps?.bottomDivider)]}):(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[verifySeparator(item.data?.topDivider),defaultMenuItemRenderer(item),verifySeparator(item.data?.bottomDivider)]})]},`menu-group-${key}`)}))})]})}));try{ColumnarMenuList.displayName="ColumnarMenuList",ColumnarMenuList.__docgenInfo={description:"This component replaces the default ContextualMenuList rendering with\na columnar layout of the sections instead of vertical stacks.\nNote that items should be sorted into sections with sectionProps,\nthough options buttons do not need to be in a section and will all be coalesced at the top.",displayName:"ColumnarMenuList",props:{styles:{defaultValue:null,description:"",name:"styles",required:!1,type:{name:"ColumnarMenuListStyles"}},items:{defaultValue:null,description:"",name:"items",required:!0,type:{name:"IContextualMenuItem[]"}},totalItemCount:{defaultValue:null,description:"",name:"totalItemCount",required:!0,type:{name:"number"}},hasCheckmarks:{defaultValue:null,description:"",name:"hasCheckmarks",required:!0,type:{name:"boolean"}},hasIcons:{defaultValue:null,description:"",name:"hasIcons",required:!0,type:{name:"boolean"}},defaultMenuItemRenderer:{defaultValue:null,description:"",name:"defaultMenuItemRenderer",required:!0,type:{name:"(item: IContextualMenuItemRenderProps) => ReactNode"}},ariaLabel:{defaultValue:null,description:"",name:"ariaLabel",required:!1,type:{name:"string"}},labelElementId:{defaultValue:null,description:"",name:"labelElementId",required:!1,type:{name:"string"}},role:{defaultValue:null,description:"",name:"role",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/ColumnarMenu/ColumnarMenuList.tsx#ColumnarMenuList"]={docgenInfo:ColumnarMenuList.__docgenInfo,name:"ColumnarMenuList",path:"../components/src/ColumnarMenu/ColumnarMenuList.tsx#ColumnarMenuList"})}catch(__react_docgen_typescript_loader_error){}function useButtonProps(buttonProps){return(0,react.useMemo)((()=>(0,merge.A)({},{styles:defaultButtonStyles},buttonProps)),[buttonProps])}try{useButtonProps.displayName="useButtonProps",useButtonProps.__docgenInfo={description:"",displayName:"useButtonProps",props:{componentRef:{defaultValue:null,description:"Optional callback to access the `IButton` interface. Use this instead of `ref` for accessing\nthe public methods and properties of the component.",name:"componentRef",required:!1,type:{name:"IRefObject<IButton>"}},elementRef:{defaultValue:null,description:"Optional callback to access the root DOM element.\n@deprecated Temporary solution which will be replaced with ref in the V8 release.",name:"elementRef",required:!1,type:{name:"Ref<HTMLElement>"}},href:{defaultValue:null,description:"If provided, this component will be rendered as an anchor.\n@defaultvalue ElementType.anchor",name:"href",required:!1,type:{name:"string"}},primary:{defaultValue:null,description:"Changes the visual presentation of the button to be emphasized.\n@defaultvalue false",name:"primary",required:!1,type:{name:"boolean"}},uniqueId:{defaultValue:null,description:"Unique ID to identify the item. Typically a duplicate of key value.",name:"uniqueId",required:!1,type:{name:"string | number"}},disabled:{defaultValue:null,description:"Whether the button is disabled",name:"disabled",required:!1,type:{name:"boolean"}},allowDisabledFocus:{defaultValue:null,description:"Whether the button can have focus in disabled mode",name:"allowDisabledFocus",required:!1,type:{name:"boolean"}},primaryDisabled:{defaultValue:null,description:"If set to true and this is a split button (`split` is true), the split button's primary action is disabled.",name:"primaryDisabled",required:!1,type:{name:"boolean"}},styles:{defaultValue:null,description:"Custom styling for individual elements within the button DOM.",name:"styles",required:!1,type:{name:"IButtonStyles"}},theme:{defaultValue:null,description:"Theme provided by HOC.",name:"theme",required:!1,type:{name:"ITheme"}},checked:{defaultValue:null,description:"Whether the button is checked. Should be used with the `toggle` attribute when creating a standalone on/off button.",name:"checked",required:!1,type:{name:"boolean"}},toggle:{defaultValue:null,description:"Whether button is a toggle button with distinct on and off states. This should be true for buttons that permanently\nchange state when a press event finishes, such as a volume mute button.",name:"toggle",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"If provided, additional class name to provide on the root element.",name:"className",required:!1,type:{name:"string"}},ariaLabel:{defaultValue:null,description:"The aria label of the button for the benefit of screen readers.",name:"ariaLabel",required:!1,type:{name:"string"}},ariaDescription:{defaultValue:null,description:"Detailed description of the button for the benefit of screen readers.\n\nBesides the compound button, other button types will need more information provided to screen reader.",name:"ariaDescription",required:!1,type:{name:"string"}},ariaHidden:{defaultValue:null,description:"If true, add an `aria-hidden` attribute instructing screen readers to ignore the element.",name:"ariaHidden",required:!1,type:{name:"boolean"}},text:{defaultValue:null,description:"Text to render button label. If text is supplied, it will override any string in button children.\nOther children components will be passed through after the text.",name:"text",required:!1,type:{name:"string"}},iconProps:{defaultValue:null,description:"The props for the icon shown in the button.",name:"iconProps",required:!1,type:{name:"IIconProps"}},menuProps:{defaultValue:null,description:"Props for button menu. Providing this will default to showing the menu icon. See `menuIconProps` for overriding\nhow the default icon looks. Providing this in addition to `onClick` and setting the `split` property to `true`\nwill render a SplitButton.",name:"menuProps",required:!1,type:{name:"IContextualMenuProps"}},onAfterMenuDismiss:{defaultValue:null,description:"Callback that runs after Button's contextual menu was closed (removed from the DOM)",name:"onAfterMenuDismiss",required:!1,type:{name:"() => void"}},split:{defaultValue:{value:"false"},description:"If set to true, and if `menuProps` and `onClick` are provided, the button will render as a SplitButton.",name:"split",required:!1,type:{name:"boolean"}},menuIconProps:{defaultValue:null,description:"The props for the icon shown when providing a menu dropdown.",name:"menuIconProps",required:!1,type:{name:"IIconProps"}},splitButtonAriaLabel:{defaultValue:null,description:"Accessible label for the dropdown chevron button if this button is split.",name:"splitButtonAriaLabel",required:!1,type:{name:"string"}},onMenuClick:{defaultValue:null,description:"Optional callback when menu is clicked.",name:"onMenuClick",required:!1,type:{name:"(ev?: MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent<HTMLElement>, button?: IButtonProps) => void"}},onRenderIcon:{defaultValue:null,description:"Custom render function for the icon",name:"onRenderIcon",required:!1,type:{name:"IRenderFunction<IButtonProps>"}},onRenderText:{defaultValue:null,description:"Custom render function for the label text.",name:"onRenderText",required:!1,type:{name:"IRenderFunction<IButtonProps>"}},onRenderDescription:{defaultValue:null,description:"Custom render function for the description text.",name:"onRenderDescription",required:!1,type:{name:"IRenderFunction<IButtonProps>"}},onRenderAriaDescription:{defaultValue:null,description:"Custom render function for the aria description element.",name:"onRenderAriaDescription",required:!1,type:{name:"IRenderFunction<IButtonProps>"}},onRenderChildren:{defaultValue:null,description:"Custom render function for rendering the button children.",name:"onRenderChildren",required:!1,type:{name:"IRenderFunction<IButtonProps>"}},onRenderMenuIcon:{defaultValue:null,description:"Custom render function for button menu icon",name:"onRenderMenuIcon",required:!1,type:{name:"IRenderFunction<IButtonProps>"}},onRenderMenu:{defaultValue:null,description:"@deprecated Deprecated at v6.3.2, to be removed at \\>= v7.0.0.\nUse `menuAs` instead.",name:"onRenderMenu",required:!1,type:{name:"IRenderFunction<IContextualMenuProps>"}},menuAs:{defaultValue:null,description:"Render a custom menu in place of the normal one.",name:"menuAs",required:!1,type:{name:"IComponentAs<IContextualMenuProps>"}},secondaryText:{defaultValue:null,description:"Description of the action this button takes.\nOnly used for compound buttons.",name:"secondaryText",required:!1,type:{name:"string"}},buttonType:{defaultValue:null,description:"@defaultvalue ButtonType.default\n@deprecated Deprecated at v1.2.3, to be removed at \\>= v2.0.0.\nUse specific button component instead.",name:"buttonType",required:!1,type:{name:"ButtonType"}},rootProps:{defaultValue:null,description:"@deprecated Deprecated at v0.56.2, to be removed at \\>= v1.0.0.\nUse native props on the Button itself instead.\nThey will be mixed into the button/anchor element rendered by the component.",name:"rootProps",required:!1,type:{name:"ButtonHTMLAttributes<HTMLButtonElement> | AnchorHTMLAttributes<HTMLAnchorElement>"}},toggled:{defaultValue:null,description:"@deprecated No longer used. Use `checked` if setting state.",name:"toggled",required:!1,type:{name:"boolean"}},data:{defaultValue:null,description:"Any custom data the developer wishes to associate with the button.",name:"data",required:!1,type:{name:"any"}},getClassNames:{defaultValue:null,description:"Method to provide the classnames to style a button.\nThe default value for this prop is the `getClassnames` func defined in `BaseButton.classnames.ts`.\n@defaultvalue getBaseButtonClassNames",name:"getClassNames",required:!1,type:{name:"(theme: ITheme, className: string, variantClassName: string, iconClassName: string, menuIconClassName: string, disabled: boolean, checked: boolean, expanded: boolean, hasMenu: boolean, isSplit: boolean, allowDisabledFocus: boolean) => IButtonClassNames"}},getSplitButtonClassNames:{defaultValue:null,description:"Method to provide the classnames to style a button.\nThe default value for this prop is the `getClassnames` func defined in `BaseButton.classnames.ts`.\n@defaultvalue getBaseSplitButtonClassNames",name:"getSplitButtonClassNames",required:!1,type:{name:"(disabled: boolean, expanded: boolean, checked: boolean, allowDisabledFocus: boolean) => ISplitButtonClassNames"}},menuTriggerKeyCode:{defaultValue:{value:"KeyCodes.down"},description:"Provides a custom KeyCode that can be used to open the button menu.\nA value of `null` can be provided to disable opening the button menu with a key press.",name:"menuTriggerKeyCode",required:!1,type:{name:"number"}},keytipProps:{defaultValue:null,description:"Optional keytip for this button",name:"keytipProps",required:!1,type:{name:"IKeytipProps"}},persistMenu:{defaultValue:null,description:"Menu will not be created or destroyed when opened or closed, instead it\nwill be hidden. This will improve perf of the menu opening but could potentially\nimpact overall perf by having more elements in the dom. Should only be used\nwhen menu perf is important.\n\nNote: This may increase the amount of time it takes for the button itself to mount.",name:"persistMenu",required:!1,type:{name:"boolean"}},renderPersistedMenuHiddenOnMount:{defaultValue:null,description:"If true, the persisted menu is rendered hidden when the button initially mounts.\nNon-persisted menus will not be in the component tree unless they are being shown.\n\nNote: This increases the time the button will take to mount, but\ncan improve perceived menu open perf. when the user opens the menu.\n@defaultvalue `undefined`, equivalent to false\n@deprecated There is known bug in Edge when this prop is true where scrollbars\noverlap with the content when a menu is first rendered hidden.\nPlease do not start using this. If you are already using this,\nplease make sure that you are doing so only in non-Edge browsers.\nSee: https://github.com/microsoft/fluentui/issues/9034",name:"renderPersistedMenuHiddenOnMount",required:!1,type:{name:"boolean"}},splitButtonMenuProps:{defaultValue:null,description:"Experimental prop that get passed into the menuButton that's rendered as part of\nsplit button. Anything passed in will likely need to have accompanying\nstyle changes.",name:"splitButtonMenuProps",required:!1,type:{name:"IButtonProps"}},description:{defaultValue:null,description:"Style for the description text if applicable (for compound buttons).\n@deprecated Use `secondaryText` instead.",name:"description",required:!1,type:{name:"string"}},defaultRender:{defaultValue:null,description:"yet unknown docs",name:"defaultRender",required:!1,type:{name:"any"}},primaryActionButtonProps:{defaultValue:null,description:"Optional props to be applied only to the primary action button of SplitButton and not to the\noverall SplitButton container",name:"primaryActionButtonProps",required:!1,type:{name:"IButtonProps"}},accept:{defaultValue:null,description:"",name:"accept",required:!1,type:{name:"string"}},acceptCharset:{defaultValue:null,description:"",name:"acceptCharset",required:!1,type:{name:"string"}},action:{defaultValue:null,description:"",name:"action",required:!1,type:{name:"string"}},allowFullScreen:{defaultValue:null,description:"",name:"allowFullScreen",required:!1,type:{name:"boolean"}},allowTransparency:{defaultValue:null,description:"",name:"allowTransparency",required:!1,type:{name:"boolean"}},alt:{defaultValue:null,description:"",name:"alt",required:!1,type:{name:"string"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"string"}},async:{defaultValue:null,description:"",name:"async",required:!1,type:{name:"boolean"}},autoComplete:{defaultValue:null,description:"",name:"autoComplete",required:!1,type:{name:"string"}},autoPlay:{defaultValue:null,description:"",name:"autoPlay",required:!1,type:{name:"boolean"}},capture:{defaultValue:null,description:"",name:"capture",required:!1,type:{name:'boolean | "user" | "environment"'}},cellPadding:{defaultValue:null,description:"",name:"cellPadding",required:!1,type:{name:"string | number"}},cellSpacing:{defaultValue:null,description:"",name:"cellSpacing",required:!1,type:{name:"string | number"}},charSet:{defaultValue:null,description:"",name:"charSet",required:!1,type:{name:"string"}},challenge:{defaultValue:null,description:"",name:"challenge",required:!1,type:{name:"string"}},cite:{defaultValue:null,description:"",name:"cite",required:!1,type:{name:"string"}},classID:{defaultValue:null,description:"",name:"classID",required:!1,type:{name:"string"}},cols:{defaultValue:null,description:"",name:"cols",required:!1,type:{name:"number"}},colSpan:{defaultValue:null,description:"",name:"colSpan",required:!1,type:{name:"number"}},controls:{defaultValue:null,description:"",name:"controls",required:!1,type:{name:"boolean"}},coords:{defaultValue:null,description:"",name:"coords",required:!1,type:{name:"string"}},crossOrigin:{defaultValue:null,description:"",name:"crossOrigin",required:!1,type:{name:"CrossOrigin"}},dateTime:{defaultValue:null,description:"",name:"dateTime",required:!1,type:{name:"string"}},default:{defaultValue:null,description:"",name:"default",required:!1,type:{name:"boolean"}},defer:{defaultValue:null,description:"",name:"defer",required:!1,type:{name:"boolean"}},download:{defaultValue:null,description:"",name:"download",required:!1,type:{name:"any"}},encType:{defaultValue:null,description:"",name:"encType",required:!1,type:{name:"string"}},form:{defaultValue:null,description:"",name:"form",required:!1,type:{name:"string"}},formAction:{defaultValue:null,description:"",name:"formAction",required:!1,type:{name:"string"}},formEncType:{defaultValue:null,description:"",name:"formEncType",required:!1,type:{name:"string"}},formMethod:{defaultValue:null,description:"",name:"formMethod",required:!1,type:{name:"string"}},formNoValidate:{defaultValue:null,description:"",name:"formNoValidate",required:!1,type:{name:"boolean"}},formTarget:{defaultValue:null,description:"",name:"formTarget",required:!1,type:{name:"string"}},frameBorder:{defaultValue:null,description:"",name:"frameBorder",required:!1,type:{name:"string | number"}},headers:{defaultValue:null,description:"",name:"headers",required:!1,type:{name:"string"}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"string | number"}},high:{defaultValue:null,description:"",name:"high",required:!1,type:{name:"number"}},hrefLang:{defaultValue:null,description:"",name:"hrefLang",required:!1,type:{name:"string"}},htmlFor:{defaultValue:null,description:"",name:"htmlFor",required:!1,type:{name:"string"}},httpEquiv:{defaultValue:null,description:"",name:"httpEquiv",required:!1,type:{name:"string"}},integrity:{defaultValue:null,description:"",name:"integrity",required:!1,type:{name:"string"}},keyParams:{defaultValue:null,description:"",name:"keyParams",required:!1,type:{name:"string"}},keyType:{defaultValue:null,description:"",name:"keyType",required:!1,type:{name:"string"}},kind:{defaultValue:null,description:"",name:"kind",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},list:{defaultValue:null,description:"",name:"list",required:!1,type:{name:"string"}},loop:{defaultValue:null,description:"",name:"loop",required:!1,type:{name:"boolean"}},low:{defaultValue:null,description:"",name:"low",required:!1,type:{name:"number"}},manifest:{defaultValue:null,description:"",name:"manifest",required:!1,type:{name:"string"}},marginHeight:{defaultValue:null,description:"",name:"marginHeight",required:!1,type:{name:"number"}},marginWidth:{defaultValue:null,description:"",name:"marginWidth",required:!1,type:{name:"number"}},max:{defaultValue:null,description:"",name:"max",required:!1,type:{name:"string | number"}},maxLength:{defaultValue:null,description:"",name:"maxLength",required:!1,type:{name:"number"}},media:{defaultValue:null,description:"",name:"media",required:!1,type:{name:"string"}},mediaGroup:{defaultValue:null,description:"",name:"mediaGroup",required:!1,type:{name:"string"}},method:{defaultValue:null,description:"",name:"method",required:!1,type:{name:"string"}},min:{defaultValue:null,description:"",name:"min",required:!1,type:{name:"string | number"}},minLength:{defaultValue:null,description:"",name:"minLength",required:!1,type:{name:"number"}},multiple:{defaultValue:null,description:"",name:"multiple",required:!1,type:{name:"boolean"}},muted:{defaultValue:null,description:"",name:"muted",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}},noValidate:{defaultValue:null,description:"",name:"noValidate",required:!1,type:{name:"boolean"}},open:{defaultValue:null,description:"",name:"open",required:!1,type:{name:"boolean"}},optimum:{defaultValue:null,description:"",name:"optimum",required:!1,type:{name:"number"}},pattern:{defaultValue:null,description:"",name:"pattern",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"",name:"placeholder",required:!1,type:{name:"string"}},playsInline:{defaultValue:null,description:"",name:"playsInline",required:!1,type:{name:"boolean"}},poster:{defaultValue:null,description:"",name:"poster",required:!1,type:{name:"string"}},preload:{defaultValue:null,description:"",name:"preload",required:!1,type:{name:"string"}},readOnly:{defaultValue:null,description:"",name:"readOnly",required:!1,type:{name:"boolean"}},required:{defaultValue:null,description:"",name:"required",required:!1,type:{name:"boolean"}},reversed:{defaultValue:null,description:"",name:"reversed",required:!1,type:{name:"boolean"}},rows:{defaultValue:null,description:"",name:"rows",required:!1,type:{name:"number"}},rowSpan:{defaultValue:null,description:"",name:"rowSpan",required:!1,type:{name:"number"}},sandbox:{defaultValue:null,description:"",name:"sandbox",required:!1,type:{name:"string"}},scope:{defaultValue:null,description:"",name:"scope",required:!1,type:{name:"string"}},scoped:{defaultValue:null,description:"",name:"scoped",required:!1,type:{name:"boolean"}},scrolling:{defaultValue:null,description:"",name:"scrolling",required:!1,type:{name:"string"}},seamless:{defaultValue:null,description:"",name:"seamless",required:!1,type:{name:"boolean"}},selected:{defaultValue:null,description:"",name:"selected",required:!1,type:{name:"boolean"}},shape:{defaultValue:null,description:"",name:"shape",required:!1,type:{name:"string"}},size:{defaultValue:null,description:"",name:"size",required:!1,type:{name:"number"}},sizes:{defaultValue:null,description:"",name:"sizes",required:!1,type:{name:"string"}},span:{defaultValue:null,description:"",name:"span",required:!1,type:{name:"number"}},src:{defaultValue:null,description:"",name:"src",required:!1,type:{name:"string"}},srcDoc:{defaultValue:null,description:"",name:"srcDoc",required:!1,type:{name:"string"}},srcLang:{defaultValue:null,description:"",name:"srcLang",required:!1,type:{name:"string"}},srcSet:{defaultValue:null,description:"",name:"srcSet",required:!1,type:{name:"string"}},start:{defaultValue:null,description:"",name:"start",required:!1,type:{name:"number"}},step:{defaultValue:null,description:"",name:"step",required:!1,type:{name:"string | number"}},summary:{defaultValue:null,description:"",name:"summary",required:!1,type:{name:"string"}},target:{defaultValue:null,description:"",name:"target",required:!1,type:{name:"string"}},type:{defaultValue:null,description:"",name:"type",required:!1,type:{name:"string"}},useMap:{defaultValue:null,description:"",name:"useMap",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"string | number | readonly string[]"}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"string | number"}},wmode:{defaultValue:null,description:"",name:"wmode",required:!1,type:{name:"string"}},wrap:{defaultValue:null,description:"",name:"wrap",required:!1,type:{name:"string"}},defaultChecked:{defaultValue:null,description:"",name:"defaultChecked",required:!1,type:{name:"boolean"}},defaultValue:{defaultValue:null,description:"",name:"defaultValue",required:!1,type:{name:"string | number | readonly string[]"}},suppressContentEditableWarning:{defaultValue:null,description:"",name:"suppressContentEditableWarning",required:!1,type:{name:"boolean"}},suppressHydrationWarning:{defaultValue:null,description:"",name:"suppressHydrationWarning",required:!1,type:{name:"boolean"}},accessKey:{defaultValue:null,description:"",name:"accessKey",required:!1,type:{name:"string"}},autoFocus:{defaultValue:null,description:"",name:"autoFocus",required:!1,type:{name:"boolean"}},contentEditable:{defaultValue:null,description:"",name:"contentEditable",required:!1,type:{name:'Booleanish | "inherit" | "plaintext-only"'}},contextMenu:{defaultValue:null,description:"",name:"contextMenu",required:!1,type:{name:"string"}},dir:{defaultValue:null,description:"",name:"dir",required:!1,type:{name:"string"}},draggable:{defaultValue:null,description:"",name:"draggable",required:!1,type:{name:"Booleanish"}},hidden:{defaultValue:null,description:"",name:"hidden",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},lang:{defaultValue:null,description:"",name:"lang",required:!1,type:{name:"string"}},nonce:{defaultValue:null,description:"",name:"nonce",required:!1,type:{name:"string"}},slot:{defaultValue:null,description:"",name:"slot",required:!1,type:{name:"string"}},spellCheck:{defaultValue:null,description:"",name:"spellCheck",required:!1,type:{name:"Booleanish"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},tabIndex:{defaultValue:null,description:"",name:"tabIndex",required:!1,type:{name:"number"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},translate:{defaultValue:null,description:"",name:"translate",required:!1,type:{name:'"yes" | "no"'}},radioGroup:{defaultValue:null,description:"",name:"radioGroup",required:!1,type:{name:"string"}},role:{defaultValue:null,description:"",name:"role",required:!1,type:{name:"AriaRole"}},about:{defaultValue:null,description:"",name:"about",required:!1,type:{name:"string"}},content:{defaultValue:null,description:"",name:"content",required:!1,type:{name:"string"}},datatype:{defaultValue:null,description:"",name:"datatype",required:!1,type:{name:"string"}},inlist:{defaultValue:null,description:"",name:"inlist",required:!1,type:{name:"any"}},prefix:{defaultValue:null,description:"",name:"prefix",required:!1,type:{name:"string"}},property:{defaultValue:null,description:"",name:"property",required:!1,type:{name:"string"}},rel:{defaultValue:null,description:"",name:"rel",required:!1,type:{name:"string"}},resource:{defaultValue:null,description:"",name:"resource",required:!1,type:{name:"string"}},rev:{defaultValue:null,description:"",name:"rev",required:!1,type:{name:"string"}},typeof:{defaultValue:null,description:"",name:"typeof",required:!1,type:{name:"string"}},vocab:{defaultValue:null,description:"",name:"vocab",required:!1,type:{name:"string"}},autoCapitalize:{defaultValue:null,description:"",name:"autoCapitalize",required:!1,type:{name:"string"}},autoCorrect:{defaultValue:null,description:"",name:"autoCorrect",required:!1,type:{name:"string"}},autoSave:{defaultValue:null,description:"",name:"autoSave",required:!1,type:{name:"string"}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string"}},itemProp:{defaultValue:null,description:"",name:"itemProp",required:!1,type:{name:"string"}},itemScope:{defaultValue:null,description:"",name:"itemScope",required:!1,type:{name:"boolean"}},itemType:{defaultValue:null,description:"",name:"itemType",required:!1,type:{name:"string"}},itemID:{defaultValue:null,description:"",name:"itemID",required:!1,type:{name:"string"}},itemRef:{defaultValue:null,description:"",name:"itemRef",required:!1,type:{name:"string"}},results:{defaultValue:null,description:"",name:"results",required:!1,type:{name:"number"}},security:{defaultValue:null,description:"",name:"security",required:!1,type:{name:"string"}},unselectable:{defaultValue:null,description:"",name:"unselectable",required:!1,type:{name:'"on" | "off"'}},inputMode:{defaultValue:null,description:"Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}",name:"inputMode",required:!1,type:{name:'"text" | "none" | "search" | "tel" | "url" | "email" | "numeric" | "decimal"'}},is:{defaultValue:null,description:"Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}",name:"is",required:!1,type:{name:"string"}},"aria-activedescendant":{defaultValue:null,description:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",name:"aria-activedescendant",required:!1,type:{name:"string"}},"aria-atomic":{defaultValue:null,description:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",name:"aria-atomic",required:!1,type:{name:"Booleanish"}},"aria-autocomplete":{defaultValue:null,description:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",name:"aria-autocomplete",required:!1,type:{name:'"none" | "list" | "inline" | "both"'}},"aria-braillelabel":{defaultValue:null,description:"Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.",name:"aria-braillelabel",required:!1,type:{name:"string"}},"aria-brailleroledescription":{defaultValue:null,description:"Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.",name:"aria-brailleroledescription",required:!1,type:{name:"string"}},"aria-busy":{defaultValue:null,description:"",name:"aria-busy",required:!1,type:{name:"Booleanish"}},"aria-checked":{defaultValue:null,description:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.',name:"aria-checked",required:!1,type:{name:'boolean | "true" | "false" | "mixed"'}},"aria-colcount":{defaultValue:null,description:"Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.",name:"aria-colcount",required:!1,type:{name:"number"}},"aria-colindex":{defaultValue:null,description:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",name:"aria-colindex",required:!1,type:{name:"number"}},"aria-colindextext":{defaultValue:null,description:"Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.",name:"aria-colindextext",required:!1,type:{name:"string"}},"aria-colspan":{defaultValue:null,description:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.",name:"aria-colspan",required:!1,type:{name:"number"}},"aria-controls":{defaultValue:null,description:"Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.",name:"aria-controls",required:!1,type:{name:"string"}},"aria-current":{defaultValue:null,description:"Indicates the element that represents the current item within a container or set of related elements.",name:"aria-current",required:!1,type:{name:'boolean | "step" | "true" | "false" | "page" | "location" | "date" | "time"'}},"aria-describedby":{defaultValue:null,description:"Identifies the element (or elements) that describes the object.\n@see aria-labelledby",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-description":{defaultValue:null,description:"Defines a string value that describes or annotates the current element.\n@see related aria-describedby.",name:"aria-description",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:"Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.",name:"aria-details",required:!1,type:{name:"string"}},"aria-disabled":{defaultValue:null,description:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.",name:"aria-disabled",required:!1,type:{name:"Booleanish"}},"aria-dropeffect":{defaultValue:null,description:"Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1",name:"aria-dropeffect",required:!1,type:{name:'"none" | "link" | "copy" | "execute" | "move" | "popup"'}},"aria-errormessage":{defaultValue:null,description:"Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.",name:"aria-errormessage",required:!1,type:{name:"string"}},"aria-expanded":{defaultValue:null,description:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",name:"aria-expanded",required:!1,type:{name:"Booleanish"}},"aria-flowto":{defaultValue:null,description:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",name:"aria-flowto",required:!1,type:{name:"string"}},"aria-grabbed":{defaultValue:null,description:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1',name:"aria-grabbed",required:!1,type:{name:"Booleanish"}},"aria-haspopup":{defaultValue:null,description:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",name:"aria-haspopup",required:!1,type:{name:'boolean | "true" | "false" | "dialog" | "grid" | "listbox" | "menu" | "tree"'}},"aria-hidden":{defaultValue:null,description:"Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.",name:"aria-hidden",required:!1,type:{name:"Booleanish"}},"aria-invalid":{defaultValue:null,description:"Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.",name:"aria-invalid",required:!1,type:{name:'boolean | "true" | "false" | "grammar" | "spelling"'}},"aria-keyshortcuts":{defaultValue:null,description:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",name:"aria-keyshortcuts",required:!1,type:{name:"string"}},"aria-label":{defaultValue:null,description:"Defines a string value that labels the current element.\n@see aria-labelledby.",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"Identifies the element (or elements) that labels the current element.\n@see aria-describedby.",name:"aria-labelledby",required:!1,type:{name:"string"}},"aria-level":{defaultValue:null,description:"Defines the hierarchical level of an element within a structure.",name:"aria-level",required:!1,type:{name:"number"}},"aria-live":{defaultValue:null,description:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",name:"aria-live",required:!1,type:{name:'"off" | "assertive" | "polite"'}},"aria-modal":{defaultValue:null,description:"Indicates whether an element is modal when displayed.",name:"aria-modal",required:!1,type:{name:"Booleanish"}},"aria-multiline":{defaultValue:null,description:"Indicates whether a text box accepts multiple lines of input or only a single line.",name:"aria-multiline",required:!1,type:{name:"Booleanish"}},"aria-multiselectable":{defaultValue:null,description:"Indicates that the user may select more than one item from the current selectable descendants.",name:"aria-multiselectable",required:!1,type:{name:"Booleanish"}},"aria-orientation":{defaultValue:null,description:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",name:"aria-orientation",required:!1,type:{name:'"horizontal" | "vertical"'}},"aria-owns":{defaultValue:null,description:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.",name:"aria-owns",required:!1,type:{name:"string"}},"aria-placeholder":{defaultValue:null,description:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",name:"aria-placeholder",required:!1,type:{name:"string"}},"aria-posinset":{defaultValue:null,description:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",name:"aria-posinset",required:!1,type:{name:"number"}},"aria-pressed":{defaultValue:null,description:'Indicates the current "pressed" state of toggle buttons.\n@see aria-checked\n@see aria-selected.',name:"aria-pressed",required:!1,type:{name:'boolean | "true" | "false" | "mixed"'}},"aria-readonly":{defaultValue:null,description:"Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.",name:"aria-readonly",required:!1,type:{name:"Booleanish"}},"aria-relevant":{defaultValue:null,description:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.",name:"aria-relevant",required:!1,type:{name:'"text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals"'}},"aria-required":{defaultValue:null,description:"Indicates that user input is required on the element before a form may be submitted.",name:"aria-required",required:!1,type:{name:"Booleanish"}},"aria-roledescription":{defaultValue:null,description:"Defines a human-readable, author-localized description for the role of an element.",name:"aria-roledescription",required:!1,type:{name:"string"}},"aria-rowcount":{defaultValue:null,description:"Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.",name:"aria-rowcount",required:!1,type:{name:"number"}},"aria-rowindex":{defaultValue:null,description:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",name:"aria-rowindex",required:!1,type:{name:"number"}},"aria-rowindextext":{defaultValue:null,description:"Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.",name:"aria-rowindextext",required:!1,type:{name:"string"}},"aria-rowspan":{defaultValue:null,description:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.",name:"aria-rowspan",required:!1,type:{name:"number"}},"aria-selected":{defaultValue:null,description:'Indicates the current "selected" state of various widgets.\n@see aria-checked\n@see aria-pressed.',name:"aria-selected",required:!1,type:{name:"Booleanish"}},"aria-setsize":{defaultValue:null,description:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.",name:"aria-setsize",required:!1,type:{name:"number"}},"aria-sort":{defaultValue:null,description:"Indicates if items in a table or grid are sorted in ascending or descending order.",name:"aria-sort",required:!1,type:{name:'"none" | "ascending" | "descending" | "other"'}},"aria-valuemax":{defaultValue:null,description:"Defines the maximum allowed value for a range widget.",name:"aria-valuemax",required:!1,type:{name:"number"}},"aria-valuemin":{defaultValue:null,description:"Defines the minimum allowed value for a range widget.",name:"aria-valuemin",required:!1,type:{name:"number"}},"aria-valuenow":{defaultValue:null,description:"Defines the current value for a range widget.\n@see aria-valuetext.",name:"aria-valuenow",required:!1,type:{name:"number"}},"aria-valuetext":{defaultValue:null,description:"Defines the human readable text alternative of aria-valuenow for a range widget.",name:"aria-valuetext",required:!1,type:{name:"string"}},dangerouslySetInnerHTML:{defaultValue:null,description:"",name:"dangerouslySetInnerHTML",required:!1,type:{name:"{ __html: string | TrustedHTML; }"}},onCopy:{defaultValue:null,description:"",name:"onCopy",required:!1,type:{name:"ClipboardEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onCopyCapture:{defaultValue:null,description:"",name:"onCopyCapture",required:!1,type:{name:"ClipboardEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onCut:{defaultValue:null,description:"",name:"onCut",required:!1,type:{name:"ClipboardEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onCutCapture:{defaultValue:null,description:"",name:"onCutCapture",required:!1,type:{name:"ClipboardEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onPaste:{defaultValue:null,description:"",name:"onPaste",required:!1,type:{name:"ClipboardEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onPasteCapture:{defaultValue:null,description:"",name:"onPasteCapture",required:!1,type:{name:"ClipboardEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onCompositionEnd:{defaultValue:null,description:"",name:"onCompositionEnd",required:!1,type:{name:"CompositionEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onCompositionEndCapture:{defaultValue:null,description:"",name:"onCompositionEndCapture",required:!1,type:{name:"CompositionEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onCompositionStart:{defaultValue:null,description:"",name:"onCompositionStart",required:!1,type:{name:"CompositionEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onCompositionStartCapture:{defaultValue:null,description:"",name:"onCompositionStartCapture",required:!1,type:{name:"CompositionEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onCompositionUpdate:{defaultValue:null,description:"",name:"onCompositionUpdate",required:!1,type:{name:"CompositionEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onCompositionUpdateCapture:{defaultValue:null,description:"",name:"onCompositionUpdateCapture",required:!1,type:{name:"CompositionEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"FocusEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onFocusCapture:{defaultValue:null,description:"",name:"onFocusCapture",required:!1,type:{name:"FocusEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"FocusEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onBlurCapture:{defaultValue:null,description:"",name:"onBlurCapture",required:!1,type:{name:"FocusEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"FormEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onChangeCapture:{defaultValue:null,description:"",name:"onChangeCapture",required:!1,type:{name:"FormEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onBeforeInput:{defaultValue:null,description:"",name:"onBeforeInput",required:!1,type:{name:"FormEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onBeforeInputCapture:{defaultValue:null,description:"",name:"onBeforeInputCapture",required:!1,type:{name:"FormEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onInput:{defaultValue:null,description:"",name:"onInput",required:!1,type:{name:"FormEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onInputCapture:{defaultValue:null,description:"",name:"onInputCapture",required:!1,type:{name:"FormEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onReset:{defaultValue:null,description:"",name:"onReset",required:!1,type:{name:"FormEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onResetCapture:{defaultValue:null,description:"",name:"onResetCapture",required:!1,type:{name:"FormEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onSubmit:{defaultValue:null,description:"",name:"onSubmit",required:!1,type:{name:"FormEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onSubmitCapture:{defaultValue:null,description:"",name:"onSubmitCapture",required:!1,type:{name:"FormEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onInvalid:{defaultValue:null,description:"",name:"onInvalid",required:!1,type:{name:"FormEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onInvalidCapture:{defaultValue:null,description:"",name:"onInvalidCapture",required:!1,type:{name:"FormEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onLoad:{defaultValue:null,description:"",name:"onLoad",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onLoadCapture:{defaultValue:null,description:"",name:"onLoadCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onError:{defaultValue:null,description:"",name:"onError",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onErrorCapture:{defaultValue:null,description:"",name:"onErrorCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onKeyDown:{defaultValue:null,description:"",name:"onKeyDown",required:!1,type:{name:"KeyboardEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onKeyDownCapture:{defaultValue:null,description:"",name:"onKeyDownCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onKeyPress:{defaultValue:null,description:"@deprecated",name:"onKeyPress",required:!1,type:{name:"KeyboardEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onKeyPressCapture:{defaultValue:null,description:"@deprecated",name:"onKeyPressCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onKeyUp:{defaultValue:null,description:"",name:"onKeyUp",required:!1,type:{name:"KeyboardEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onKeyUpCapture:{defaultValue:null,description:"",name:"onKeyUpCapture",required:!1,type:{name:"KeyboardEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onAbort:{defaultValue:null,description:"",name:"onAbort",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onAbortCapture:{defaultValue:null,description:"",name:"onAbortCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onCanPlay:{defaultValue:null,description:"",name:"onCanPlay",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onCanPlayCapture:{defaultValue:null,description:"",name:"onCanPlayCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onCanPlayThrough:{defaultValue:null,description:"",name:"onCanPlayThrough",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onCanPlayThroughCapture:{defaultValue:null,description:"",name:"onCanPlayThroughCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onDurationChange:{defaultValue:null,description:"",name:"onDurationChange",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onDurationChangeCapture:{defaultValue:null,description:"",name:"onDurationChangeCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onEmptied:{defaultValue:null,description:"",name:"onEmptied",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onEmptiedCapture:{defaultValue:null,description:"",name:"onEmptiedCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onEncrypted:{defaultValue:null,description:"",name:"onEncrypted",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onEncryptedCapture:{defaultValue:null,description:"",name:"onEncryptedCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onEnded:{defaultValue:null,description:"",name:"onEnded",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onEndedCapture:{defaultValue:null,description:"",name:"onEndedCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onLoadedData:{defaultValue:null,description:"",name:"onLoadedData",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onLoadedDataCapture:{defaultValue:null,description:"",name:"onLoadedDataCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onLoadedMetadata:{defaultValue:null,description:"",name:"onLoadedMetadata",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onLoadedMetadataCapture:{defaultValue:null,description:"",name:"onLoadedMetadataCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onLoadStart:{defaultValue:null,description:"",name:"onLoadStart",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onLoadStartCapture:{defaultValue:null,description:"",name:"onLoadStartCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onPause:{defaultValue:null,description:"",name:"onPause",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onPauseCapture:{defaultValue:null,description:"",name:"onPauseCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onPlay:{defaultValue:null,description:"",name:"onPlay",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onPlayCapture:{defaultValue:null,description:"",name:"onPlayCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onPlaying:{defaultValue:null,description:"",name:"onPlaying",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onPlayingCapture:{defaultValue:null,description:"",name:"onPlayingCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onProgress:{defaultValue:null,description:"",name:"onProgress",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onProgressCapture:{defaultValue:null,description:"",name:"onProgressCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onRateChange:{defaultValue:null,description:"",name:"onRateChange",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onRateChangeCapture:{defaultValue:null,description:"",name:"onRateChangeCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onResize:{defaultValue:null,description:"",name:"onResize",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onResizeCapture:{defaultValue:null,description:"",name:"onResizeCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onSeeked:{defaultValue:null,description:"",name:"onSeeked",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onSeekedCapture:{defaultValue:null,description:"",name:"onSeekedCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onSeeking:{defaultValue:null,description:"",name:"onSeeking",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onSeekingCapture:{defaultValue:null,description:"",name:"onSeekingCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onStalled:{defaultValue:null,description:"",name:"onStalled",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onStalledCapture:{defaultValue:null,description:"",name:"onStalledCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onSuspend:{defaultValue:null,description:"",name:"onSuspend",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onSuspendCapture:{defaultValue:null,description:"",name:"onSuspendCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onTimeUpdate:{defaultValue:null,description:"",name:"onTimeUpdate",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onTimeUpdateCapture:{defaultValue:null,description:"",name:"onTimeUpdateCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onVolumeChange:{defaultValue:null,description:"",name:"onVolumeChange",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onVolumeChangeCapture:{defaultValue:null,description:"",name:"onVolumeChangeCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onWaiting:{defaultValue:null,description:"",name:"onWaiting",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onWaitingCapture:{defaultValue:null,description:"",name:"onWaitingCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onAuxClick:{defaultValue:null,description:"",name:"onAuxClick",required:!1,type:{name:"MouseEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onAuxClickCapture:{defaultValue:null,description:"",name:"onAuxClickCapture",required:!1,type:{name:"MouseEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"MouseEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onClickCapture:{defaultValue:null,description:"",name:"onClickCapture",required:!1,type:{name:"MouseEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onContextMenu:{defaultValue:null,description:"",name:"onContextMenu",required:!1,type:{name:"MouseEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onContextMenuCapture:{defaultValue:null,description:"",name:"onContextMenuCapture",required:!1,type:{name:"MouseEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onDoubleClick:{defaultValue:null,description:"",name:"onDoubleClick",required:!1,type:{name:"MouseEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onDoubleClickCapture:{defaultValue:null,description:"",name:"onDoubleClickCapture",required:!1,type:{name:"MouseEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onDrag:{defaultValue:null,description:"",name:"onDrag",required:!1,type:{name:"DragEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onDragCapture:{defaultValue:null,description:"",name:"onDragCapture",required:!1,type:{name:"DragEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onDragEnd:{defaultValue:null,description:"",name:"onDragEnd",required:!1,type:{name:"DragEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onDragEndCapture:{defaultValue:null,description:"",name:"onDragEndCapture",required:!1,type:{name:"DragEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onDragEnter:{defaultValue:null,description:"",name:"onDragEnter",required:!1,type:{name:"DragEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onDragEnterCapture:{defaultValue:null,description:"",name:"onDragEnterCapture",required:!1,type:{name:"DragEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onDragExit:{defaultValue:null,description:"",name:"onDragExit",required:!1,type:{name:"DragEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onDragExitCapture:{defaultValue:null,description:"",name:"onDragExitCapture",required:!1,type:{name:"DragEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onDragLeave:{defaultValue:null,description:"",name:"onDragLeave",required:!1,type:{name:"DragEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onDragLeaveCapture:{defaultValue:null,description:"",name:"onDragLeaveCapture",required:!1,type:{name:"DragEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onDragOver:{defaultValue:null,description:"",name:"onDragOver",required:!1,type:{name:"DragEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onDragOverCapture:{defaultValue:null,description:"",name:"onDragOverCapture",required:!1,type:{name:"DragEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onDragStart:{defaultValue:null,description:"",name:"onDragStart",required:!1,type:{name:"DragEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onDragStartCapture:{defaultValue:null,description:"",name:"onDragStartCapture",required:!1,type:{name:"DragEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onDrop:{defaultValue:null,description:"",name:"onDrop",required:!1,type:{name:"DragEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onDropCapture:{defaultValue:null,description:"",name:"onDropCapture",required:!1,type:{name:"DragEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onMouseDown:{defaultValue:null,description:"",name:"onMouseDown",required:!1,type:{name:"MouseEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onMouseDownCapture:{defaultValue:null,description:"",name:"onMouseDownCapture",required:!1,type:{name:"MouseEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onMouseEnter:{defaultValue:null,description:"",name:"onMouseEnter",required:!1,type:{name:"MouseEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onMouseLeave:{defaultValue:null,description:"",name:"onMouseLeave",required:!1,type:{name:"MouseEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onMouseMove:{defaultValue:null,description:"",name:"onMouseMove",required:!1,type:{name:"MouseEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onMouseMoveCapture:{defaultValue:null,description:"",name:"onMouseMoveCapture",required:!1,type:{name:"MouseEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onMouseOut:{defaultValue:null,description:"",name:"onMouseOut",required:!1,type:{name:"MouseEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onMouseOutCapture:{defaultValue:null,description:"",name:"onMouseOutCapture",required:!1,type:{name:"MouseEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onMouseOver:{defaultValue:null,description:"",name:"onMouseOver",required:!1,type:{name:"MouseEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onMouseOverCapture:{defaultValue:null,description:"",name:"onMouseOverCapture",required:!1,type:{name:"MouseEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onMouseUp:{defaultValue:null,description:"",name:"onMouseUp",required:!1,type:{name:"MouseEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onMouseUpCapture:{defaultValue:null,description:"",name:"onMouseUpCapture",required:!1,type:{name:"MouseEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onSelect:{defaultValue:null,description:"",name:"onSelect",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onSelectCapture:{defaultValue:null,description:"",name:"onSelectCapture",required:!1,type:{name:"ReactEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onTouchCancel:{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"TouchEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onTouchCancelCapture:{defaultValue:null,description:"",name:"onTouchCancelCapture",required:!1,type:{name:"TouchEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onTouchEnd:{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"TouchEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onTouchEndCapture:{defaultValue:null,description:"",name:"onTouchEndCapture",required:!1,type:{name:"TouchEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onTouchMove:{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"TouchEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onTouchMoveCapture:{defaultValue:null,description:"",name:"onTouchMoveCapture",required:!1,type:{name:"TouchEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onTouchStart:{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"TouchEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onTouchStartCapture:{defaultValue:null,description:"",name:"onTouchStartCapture",required:!1,type:{name:"TouchEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onPointerDown:{defaultValue:null,description:"",name:"onPointerDown",required:!1,type:{name:"PointerEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onPointerDownCapture:{defaultValue:null,description:"",name:"onPointerDownCapture",required:!1,type:{name:"PointerEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onPointerMove:{defaultValue:null,description:"",name:"onPointerMove",required:!1,type:{name:"PointerEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onPointerMoveCapture:{defaultValue:null,description:"",name:"onPointerMoveCapture",required:!1,type:{name:"PointerEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onPointerUp:{defaultValue:null,description:"",name:"onPointerUp",required:!1,type:{name:"PointerEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onPointerUpCapture:{defaultValue:null,description:"",name:"onPointerUpCapture",required:!1,type:{name:"PointerEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onPointerCancel:{defaultValue:null,description:"",name:"onPointerCancel",required:!1,type:{name:"PointerEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onPointerCancelCapture:{defaultValue:null,description:"",name:"onPointerCancelCapture",required:!1,type:{name:"PointerEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onPointerEnter:{defaultValue:null,description:"",name:"onPointerEnter",required:!1,type:{name:"PointerEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onPointerLeave:{defaultValue:null,description:"",name:"onPointerLeave",required:!1,type:{name:"PointerEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onPointerOver:{defaultValue:null,description:"",name:"onPointerOver",required:!1,type:{name:"PointerEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onPointerOverCapture:{defaultValue:null,description:"",name:"onPointerOverCapture",required:!1,type:{name:"PointerEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onPointerOut:{defaultValue:null,description:"",name:"onPointerOut",required:!1,type:{name:"PointerEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onPointerOutCapture:{defaultValue:null,description:"",name:"onPointerOutCapture",required:!1,type:{name:"PointerEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onGotPointerCapture:{defaultValue:null,description:"",name:"onGotPointerCapture",required:!1,type:{name:"PointerEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onGotPointerCaptureCapture:{defaultValue:null,description:"",name:"onGotPointerCaptureCapture",required:!1,type:{name:"PointerEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onLostPointerCapture:{defaultValue:null,description:"",name:"onLostPointerCapture",required:!1,type:{name:"PointerEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onLostPointerCaptureCapture:{defaultValue:null,description:"",name:"onLostPointerCaptureCapture",required:!1,type:{name:"PointerEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onScroll:{defaultValue:null,description:"",name:"onScroll",required:!1,type:{name:"UIEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onScrollCapture:{defaultValue:null,description:"",name:"onScrollCapture",required:!1,type:{name:"UIEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onWheel:{defaultValue:null,description:"",name:"onWheel",required:!1,type:{name:"WheelEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onWheelCapture:{defaultValue:null,description:"",name:"onWheelCapture",required:!1,type:{name:"WheelEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onAnimationStart:{defaultValue:null,description:"",name:"onAnimationStart",required:!1,type:{name:"AnimationEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onAnimationStartCapture:{defaultValue:null,description:"",name:"onAnimationStartCapture",required:!1,type:{name:"AnimationEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onAnimationEnd:{defaultValue:null,description:"",name:"onAnimationEnd",required:!1,type:{name:"AnimationEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onAnimationEndCapture:{defaultValue:null,description:"",name:"onAnimationEndCapture",required:!1,type:{name:"AnimationEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onAnimationIteration:{defaultValue:null,description:"",name:"onAnimationIteration",required:!1,type:{name:"AnimationEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onAnimationIterationCapture:{defaultValue:null,description:"",name:"onAnimationIterationCapture",required:!1,type:{name:"AnimationEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onTransitionEnd:{defaultValue:null,description:"",name:"onTransitionEnd",required:!1,type:{name:"TransitionEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}},onTransitionEndCapture:{defaultValue:null,description:"",name:"onTransitionEndCapture",required:!1,type:{name:"TransitionEventHandler<HTMLDivElement | HTMLAnchorElement | HTMLButtonElement | BaseButton | Button | HTMLSpanElement>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/ColumnarMenu/ColumnarMenu.hooks.tsx#useButtonProps"]={docgenInfo:useButtonProps.__docgenInfo,name:"useButtonProps",path:"../components/src/ColumnarMenu/ColumnarMenu.hooks.tsx#useButtonProps"})}catch(__react_docgen_typescript_loader_error){}const ColumnarMenu=(0,react.memo)((function ColumnarMenu({text,buttonProps,menuListProps,...props}){const menuProps=function useMenuProps(baseMenuProps,menuListProps){const renderColumnarMenu=(0,react.useCallback)((menuProps=>menuProps?(0,jsx_runtime.jsx)(ColumnarMenuList,{...menuProps,...menuListProps}):null),[menuListProps]);return(0,react.useMemo)((()=>({onRenderMenuList:renderColumnarMenu,...baseMenuProps})),[baseMenuProps,renderColumnarMenu])}(props,menuListProps),_buttonProps=useButtonProps(buttonProps);return(0,jsx_runtime.jsx)(lib_commonjs.DefaultButton,{..._buttonProps,menuProps,text})}));try{ColumnarMenu.displayName="ColumnarMenu",ColumnarMenu.__docgenInfo={description:"Dropdown button menu that supports grouped items (using sectionProps) in a columnar layout.\nThis is a hybrid control that uses a button to create the dropdown menu,\nbut overrides the menu renderer to lay out any item sections as columns instead of a vertical stack.",displayName:"ColumnarMenu",props:{text:{defaultValue:null,description:"Text to display in the menu button",name:"text",required:!1,type:{name:"string"}},buttonProps:{defaultValue:null,description:"Props to customize the menu button",name:"buttonProps",required:!1,type:{name:"IButtonProps"}},menuListProps:{defaultValue:null,description:"",name:"menuListProps",required:!1,type:{name:"Partial<ColumnarMenuListProps>"}},componentRef:{defaultValue:null,description:"Optional callback to access the IContextualMenu interface. Use this instead of ref for accessing\nthe public methods and properties of the component.\n@deprecated ContextualMenu has no imperative methods, so componentRef no longer returns a ref",name:"componentRef",required:!1,type:{name:"IRefObject<IContextualMenu>"}},styles:{defaultValue:null,description:"Call to provide customized styling that will layer on top of the variant rules.",name:"styles",required:!1,type:{name:"IStyleFunctionOrObject<IContextualMenuStyleProps, IContextualMenuStyles>"}},theme:{defaultValue:null,description:"Theme provided by higher-order component.",name:"theme",required:!1,type:{name:"ITheme"}},className:{defaultValue:null,description:"Additional CSS class to apply to the ContextualMenu.",name:"className",required:!1,type:{name:"string"}},target:{defaultValue:null,description:"The target that the ContextualMenu should try to position itself based on.\nIt can be either an element, a query selector string resolving to a valid element,\nor a MouseEvent. If a MouseEvent is given, the origin point of the event will be used.",name:"target",required:!1,type:{name:"Target"}},directionalHint:{defaultValue:null,description:"How the menu should be positioned\n@defaultvalue DirectionalHint.bottomAutoEdge",name:"directionalHint",required:!1,type:{name:"DirectionalHint"}},directionalHintForRTL:{defaultValue:null,description:"How the menu should be positioned in RTL layouts.\nIf not specified, a mirror of `directionalHint` will be used.",name:"directionalHintForRTL",required:!1,type:{name:"DirectionalHint"}},gapSpace:{defaultValue:null,description:"The gap between the ContextualMenu and the target\n@defaultvalue 0",name:"gapSpace",required:!1,type:{name:"number"}},beakWidth:{defaultValue:null,description:"The width of the beak.\n@defaultvalue 16",name:"beakWidth",required:!1,type:{name:"number"}},useTargetWidth:{defaultValue:null,description:"If true the context menu will render as the same width as the target element\n@defaultvalue false",name:"useTargetWidth",required:!1,type:{name:"boolean"}},useTargetAsMinWidth:{defaultValue:null,description:"If true the context menu will have a minimum width equal to the width of the target element\n@defaultvalue false",name:"useTargetAsMinWidth",required:!1,type:{name:"boolean"}},bounds:{defaultValue:null,description:"The bounding rectangle (or callback that returns a rectangle) which the contextual menu can appear in.",name:"bounds",required:!1,type:{name:"IRectangle | ((target?: Target, targetWindow?: Window) => IRectangle)"}},isBeakVisible:{defaultValue:null,description:"If true then the beak is visible. If false it will not be shown.",name:"isBeakVisible",required:!1,type:{name:"boolean"}},coverTarget:{defaultValue:null,description:"If true, the menu will be positioned to cover the target.\nIf false, it will be positioned next to the target.\n@defaultvalue false",name:"coverTarget",required:!1,type:{name:"boolean"}},alignTargetEdge:{defaultValue:null,description:"If true the positioning logic will prefer to flip edges rather than to nudge the rectangle to fit within bounds,\nthus making sure the element aligns perfectly with target's alignment edge",name:"alignTargetEdge",required:!1,type:{name:"boolean"}},items:{defaultValue:null,description:"Menu items to display.",name:"items",required:!0,type:{name:"IContextualMenuItem[]"}},labelElementId:{defaultValue:null,description:"Used as `aria-labelledby` for the menu element inside the callout.",name:"labelElementId",required:!1,type:{name:"string"}},shouldFocusOnMount:{defaultValue:null,description:"Whether to focus on the menu when mounted.\n@defaultvalue true",name:"shouldFocusOnMount",required:!1,type:{name:"boolean"}},shouldFocusOnContainer:{defaultValue:null,description:"Whether to focus on the contextual menu container (as opposed to the first menu item).\n\nAvoid using as it breaks the default focus behaviour when using assistive technologies.",name:"shouldFocusOnContainer",required:!1,type:{name:"boolean"}},onDismiss:{defaultValue:null,description:"Callback when the ContextualMenu tries to close. If `dismissAll` is true then all\nsubmenus will be dismissed.",name:"onDismiss",required:!1,type:{name:"(ev?: Event | MouseEvent<Element, MouseEvent> | KeyboardEvent<Element>, dismissAll?: boolean) => void"}},onItemClick:{defaultValue:null,description:"Click handler which is invoked if `onClick` is not passed for individual contextual\nmenu item.\nReturning true will dismiss the menu even if `ev.preventDefault()` was called.",name:"onItemClick",required:!1,type:{name:"(ev?: MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent<HTMLElement>, item?: IContextualMenuItem) => boolean | void"}},isSubMenu:{defaultValue:null,description:"Whether this menu is a submenu of another menu.",name:"isSubMenu",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"ID for the ContextualMenu's root element (inside the callout).\nShould be used for `aria-owns` and other such uses, rather than direct reference for programmatic purposes.",name:"id",required:!1,type:{name:"string"}},ariaLabel:{defaultValue:null,description:"Accessible label for the ContextualMenu's root element (inside the callout).",name:"ariaLabel",required:!1,type:{name:"string"}},doNotLayer:{defaultValue:null,description:"If true do not render on a new layer. If false render on a new layer.\n@defaultvalue false",name:"doNotLayer",required:!1,type:{name:"boolean"}},directionalHintFixed:{defaultValue:null,description:"If true the position will not change sides in an attempt to fit the ContextualMenu within bounds.\nIt will still attempt to align it to whatever bounds are given.\n@defaultvalue false",name:"directionalHintFixed",required:!1,type:{name:"boolean"}},onMenuOpened:{defaultValue:null,description:"Callback for when the menu has been opened.",name:"onMenuOpened",required:!1,type:{name:"(contextualMenu?: IContextualMenuProps) => void"}},onMenuDismissed:{defaultValue:null,description:"Callback for when the menu is being closed (removing from the DOM).",name:"onMenuDismissed",required:!1,type:{name:"(contextualMenu?: IContextualMenuProps) => void"}},calloutProps:{defaultValue:null,description:"Additional custom props for the Callout.",name:"calloutProps",required:!1,type:{name:"ICalloutProps"}},title:{defaultValue:null,description:"Title to be displayed at the top of the menu, above the items.",name:"title",required:!1,type:{name:"string"}},getMenuClassNames:{defaultValue:null,description:"Method to provide the classnames to style the contextual menu.\n@deprecated Use `styles` instead to leverage mergeStyles API.",name:"getMenuClassNames",required:!1,type:{name:"(theme: ITheme, className?: string) => IContextualMenuClassNames"}},onRenderSubMenu:{defaultValue:null,description:"Custom render function for a submenu.",name:"onRenderSubMenu",required:!1,type:{name:"IRenderFunction<IContextualMenuProps>"}},onRenderMenuList:{defaultValue:null,description:"Method to override the render of the list of menu items.",name:"onRenderMenuList",required:!1,type:{name:"IRenderFunction<IContextualMenuListProps>"}},onRenderContextualMenuItem:{defaultValue:null,description:"Method to wrap menu items. Gives the ability to wrap a custom\ntooltip to each menu item button.",name:"onRenderContextualMenuItem",required:!1,type:{name:"IRenderFunction<IContextualMenuItem>"}},subMenuHoverDelay:{defaultValue:null,description:"Delay (in milliseconds) to wait before expanding / dismissing a submenu on mouseEnter or mouseLeave",name:"subMenuHoverDelay",required:!1,type:{name:"number"}},contextualMenuItemAs:{defaultValue:null,description:"Custom component to use for rendering individual menu items.\n@defaultvalue ContextualMenuItem",name:"contextualMenuItemAs",required:!1,type:{name:"IComponentAs<IContextualMenuItemProps>"}},focusZoneProps:{defaultValue:null,description:"Props to pass down to the FocusZone.\nNOTE: the default FocusZoneDirection will be used unless a direction\nis specified in the focusZoneProps (even if other focusZoneProps are defined)\n@defaultvalue \\{ direction: FocusZoneDirection.vertical \\}",name:"focusZoneProps",required:!1,type:{name:"IFocusZoneProps"}},focusZoneAs:{defaultValue:null,description:"Custom component to use for rendering the focus zone (the root).\n@defaultValue FocusZone",name:"focusZoneAs",required:!1,type:{name:"IComponentAs<IFocusZoneProps>"}},hidden:{defaultValue:null,description:"If true, renders the ContextualMenu in a hidden state.\nUse this flag, rather than rendering a ContextualMenu conditionally based on visibility,\nto improve rendering performance when it becomes visible.\nNote: When ContextualMenu is hidden its content will not be rendered. It will only render\nonce the ContextualMenu is visible.",name:"hidden",required:!1,type:{name:"boolean"}},shouldUpdateWhenHidden:{defaultValue:null,description:"If true, the menu will be updated even when `hidden=true`. Note that this will consume\nresources to update even when nothing is being shown to the user. This might be helpful if\nyour updates are small and you want the menu to display quickly when `hidden` is set to false.",name:"shouldUpdateWhenHidden",required:!1,type:{name:"boolean"}},delayUpdateFocusOnHover:{defaultValue:null,description:"If true, the contextual menu will not be updated until focus enters the menu via other means.\nThis will only result in different behavior when `shouldFocusOnMount = false`.",name:"delayUpdateFocusOnHover",required:!1,type:{name:"boolean"}},onRestoreFocus:{defaultValue:null,description:"Called when the component is unmounting, and focus needs to be restored. If this is provided,\nfocus will not be restored automatically, and you'll need to call `params.originalElement.focus()`.",name:"onRestoreFocus",required:!1,type:{name:"(params: IPopupRestoreFocusParams) => void"}},ref:{defaultValue:null,description:"Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}",name:"ref",required:!1,type:{name:"LegacyRef<HTMLDivElement>"}},key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"Key"}},responsiveMode:{defaultValue:null,description:"",name:"responsiveMode",required:!1,type:{name:"ResponsiveMode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/ColumnarMenu/ColumnarMenu.tsx#ColumnarMenu"]={docgenInfo:ColumnarMenu.__docgenInfo,name:"ColumnarMenu",path:"../components/src/ColumnarMenu/ColumnarMenu.tsx#ColumnarMenu"})}catch(__react_docgen_typescript_loader_error){}const items=[{key:"section-1",itemType:lib_commonjs.ContextualMenuItemType.Section,sectionProps:{title:"Electronics",items:[{key:"Laptop",text:"Laptop"},{key:"Mouse",text:"Mouse"},{key:"Keyboard",text:"Keyboard"}]}},{key:"section-2",itemType:lib_commonjs.ContextualMenuItemType.Section,sectionProps:{title:"Furniture",items:[{key:"Table",text:"Table",title:"Table"},{key:"Chair",text:"Chair in a brown color with starts on top",title:"Chair in a brown color with starts on top"}]}}],ColumnarMenu_stories={title:"@essex:components/ColumnarMenu",component:args=>(0,jsx_runtime.jsx)("div",{style:{width:200,height:100,padding:12,display:"flex",justifyContent:"center",alignItems:"center",border:"1px solid orange"},children:(0,jsx_runtime.jsx)(ColumnarMenu,{...args})}),args:{items,buttonStyles:{root:{width:150},label:{width:120}},onItemClick:()=>alert("item clicked")}},Primary={args:{text:"Electronics and furniture list"}},Customized={args:{text:"Furniture",buttonProps:{styles:{root:{width:120}}},styles:{root:{background:"aliceblue"}},menuListProps:{styles:{header:{color:"dodgerblue"},column:{border:"1px dotted coral"},item:{root:{color:"green"}}}}}},Overflow={args:{text:"ElectronicsAndFurnitureList.csv"}},WithButtons={args:{text:"Allows reset",items:[{key:"select-button",text:"Select",data:{button:!0,bottomDivider:!0},onClick:()=>alert("Select clicked")},{key:"reset-button",text:"Reset",data:{button:!0,bottomDivider:!0},onClick:()=>alert("Reset clicked")},...items]}};Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"{\n  args: {\n    text: 'Electronics and furniture list'\n  }\n}",...Primary.parameters?.docs?.source}}},Customized.parameters={...Customized.parameters,docs:{...Customized.parameters?.docs,source:{originalSource:"{\n  args: {\n    text: 'Furniture',\n    buttonProps: {\n      styles: {\n        root: {\n          width: 120\n        }\n      }\n    },\n    styles: {\n      root: {\n        background: 'aliceblue'\n      }\n    },\n    menuListProps: {\n      styles: {\n        header: {\n          color: 'dodgerblue'\n        },\n        column: {\n          border: '1px dotted coral'\n        },\n        item: {\n          root: {\n            color: 'green'\n          }\n        }\n      }\n    }\n  }\n}",...Customized.parameters?.docs?.source}}},Overflow.parameters={...Overflow.parameters,docs:{...Overflow.parameters?.docs,source:{originalSource:"{\n  args: {\n    // demonstrates ellipsis text overflow\n    text: 'ElectronicsAndFurnitureList.csv'\n  }\n}",...Overflow.parameters?.docs?.source}}},WithButtons.parameters={...WithButtons.parameters,docs:{...WithButtons.parameters?.docs,source:{originalSource:"{\n  args: {\n    text: 'Allows reset',\n    items: [{\n      key: 'select-button',\n      text: 'Select',\n      data: {\n        button: true,\n        bottomDivider: true\n      },\n      onClick: () => alert('Select clicked')\n    }, {\n      key: 'reset-button',\n      text: 'Reset',\n      data: {\n        button: true,\n        bottomDivider: true\n      },\n      onClick: () => alert('Reset clicked')\n    }, ...items]\n  }\n}",...WithButtons.parameters?.docs?.source}}}}}]);