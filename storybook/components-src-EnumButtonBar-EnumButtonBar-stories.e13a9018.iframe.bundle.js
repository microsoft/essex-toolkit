/*! For license information please see components-src-EnumButtonBar-EnumButtonBar-stories.e13a9018.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkessex_toolkit_stories=self.webpackChunkessex_toolkit_stories||[]).push([[4230],{"../components/src/EnumButtonBar/EnumButtonBar.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,default:()=>EnumButtonBar_stories});var jsx_runtime=__webpack_require__("../../.yarn/cache/react-npm-18.3.1-af38f3c1ae-261137d3f3.zip/node_modules/react/jsx-runtime.js"),lib_commonjs=__webpack_require__("../../.yarn/__virtual__/@fluentui-react-virtual-de7476e3d6/0/cache/@fluentui-react-npm-8.118.9-93c5d7c0a7-1806e7182f.zip/node_modules/@fluentui/react/lib-commonjs/index.js"),react=__webpack_require__("../../.yarn/cache/react-npm-18.3.1-af38f3c1ae-261137d3f3.zip/node_modules/react/index.js");function EnumButtonBar({enumeration,selected,onChange,styles,iconNames,iconOnly}){const selectedKey=(0,react.useMemo)((()=>{const entry=Object.entries(enumeration).find((([text,value])=>value===selected));return entry?entry[1]:void 0}),[enumeration,selected]),handleChange=(0,react.useCallback)((s=>onChange?.(s)),[onChange]),options=(0,react.useMemo)((()=>Object.entries(enumeration).map(((m,i)=>{const key=m[1],text=m[0].replace(/([a-z\d])([A-Z])/g,"$1 $2");return{key,text,checked:selectedKey===key,iconProps:iconNames?{iconName:iconNames[i]}:void 0,iconOnly,onClick:()=>handleChange(key),ariaLabel:text}}))),[enumeration,handleChange,iconNames,iconOnly,selectedKey]);return(0,jsx_runtime.jsx)(lib_commonjs.CommandBar,{items:options,styles})}try{EnumButtonBar.displayName="EnumButtonBar",EnumButtonBar.__docgenInfo={description:"",displayName:"EnumButtonBar",props:{enumeration:{defaultValue:null,description:"",name:"enumeration",required:!0,type:{name:"any"}},selected:{defaultValue:null,description:"",name:"selected",required:!1,type:{name:"E"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"(selected: string | number) => void"}},styles:{defaultValue:null,description:"",name:"styles",required:!1,type:{name:"IStyleFunctionOrObject<ICommandBarStyleProps, ICommandBarStyles>"}},iconNames:{defaultValue:null,description:"List of icons for each enum option. Must match the indices of the enum entries.",name:"iconNames",required:!1,type:{name:"string[]"}},iconOnly:{defaultValue:null,description:"",name:"iconOnly",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/EnumButtonBar/EnumButtonBar.tsx#EnumButtonBar"]={docgenInfo:EnumButtonBar.__docgenInfo,name:"EnumButtonBar",path:"../components/src/EnumButtonBar/EnumButtonBar.tsx#EnumButtonBar"})}catch(__react_docgen_typescript_loader_error){}const EnumButtonBar_stories={title:"@essex:components/EnumButtonBar",component:EnumButtonBar};var Stuff;!function(Stuff){Stuff.First="first",Stuff.Second="second",Stuff.Another="another",Stuff.CamelCase="camelcase"}(Stuff||(Stuff={}));const PrimaryComponent=args=>{const theme=(0,lib_commonjs.useTheme)(),[selected,setSelected]=(0,react.useState)("first"),onChange=(0,react.useCallback)((opt=>setSelected(opt)),[setSelected]);return console.log(selected),(0,jsx_runtime.jsx)(EnumButtonBar,{...args,onChange,styles:{root:{border:`1px solid ${theme.palette.neutralTertiaryAlt}`,padding:0}},selected})},Primary={render:args=>(0,jsx_runtime.jsx)(PrimaryComponent,{...args}),args:{enumeration:Stuff,iconOnly:!0,iconNames:["Document","Database","LightningBolt","Code"]},name:"EnumButtonBar"};Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"{\n  render: (args: EnumButtonBarProps<Stuff>) => <PrimaryComponent {...args} />,\n  args: {\n    enumeration: Stuff,\n    iconOnly: true,\n    iconNames: ['Document', 'Database', 'LightningBolt', 'Code']\n  },\n  name: 'EnumButtonBar'\n}",...Primary.parameters?.docs?.source}}}}}]);