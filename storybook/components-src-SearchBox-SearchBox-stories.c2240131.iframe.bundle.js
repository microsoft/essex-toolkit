/*! For license information please see components-src-SearchBox-SearchBox-stories.c2240131.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkessex_toolkit_stories=self.webpackChunkessex_toolkit_stories||[]).push([[9014],{"../components/src/SearchBox/SearchBox.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,default:()=>SearchBox_stories});var jsx_runtime=__webpack_require__("../../.yarn/cache/react-npm-18.3.1-af38f3c1ae-261137d3f3.zip/node_modules/react/jsx-runtime.js"),lib_commonjs=__webpack_require__("../../.yarn/__virtual__/@fluentui-react-virtual-de7476e3d6/0/cache/@fluentui-react-npm-8.118.9-93c5d7c0a7-1806e7182f.zip/node_modules/@fluentui/react/lib-commonjs/index.js"),react=__webpack_require__("../../.yarn/cache/react-npm-18.3.1-af38f3c1ae-261137d3f3.zip/node_modules/react/index.js");const static_style={display:"flex",alignItems:"flex-end"},static_text_style={flex:1,marginRight:8},SearchBox=({defaultValue="",label,placeholder,errorMessage,onSearch=()=>null})=>{const[queryText,setQueryText]=(0,react.useState)(defaultValue),handleKeyDown=(0,react.useCallback)((event=>{13===event.keyCode&&onSearch(queryText)}),[onSearch,queryText]),handleSearch=(0,react.useCallback)((()=>onSearch(queryText)),[onSearch,queryText]);return(0,jsx_runtime.jsxs)("div",{style:static_style,children:[(0,jsx_runtime.jsx)("div",{style:static_text_style,children:(0,jsx_runtime.jsx)(lib_commonjs.TextField,{label,placeholder,defaultValue,errorMessage,onChange:(event,newValue)=>{setQueryText(newValue||"")},onKeyDown:handleKeyDown})}),(0,jsx_runtime.jsx)(lib_commonjs.PrimaryButton,{onClick:handleSearch,children:"Search"})]})};try{SearchBox.displayName="SearchBox",SearchBox.__docgenInfo={description:"Extends the idea of a SearchBox to include the Search button alongside the text field.\nNote that this is a compound TextField + PrimaryButton. We may want to switch the the Fluent SearchBox\nfield, which includes autocomplete capability.",displayName:"SearchBox",props:{defaultValue:{defaultValue:{value:""},description:"Value to display in the box on initial display.",name:"defaultValue",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"Label above the search box.",name:"label",required:!1,type:{name:"string"}},placeholder:{defaultValue:null,description:"Placeholder text for the empty text field.",name:"placeholder",required:!1,type:{name:"string"}},errorMessage:{defaultValue:null,description:"Error message to display below the text field when applicable.",name:"errorMessage",required:!1,type:{name:"string"}},onSearch:{defaultValue:{value:"() => null"},description:"Callback to receive query text when the user presses enter or clicks the search button.",name:"onSearch",required:!1,type:{name:"(query: string) => any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../components/src/SearchBox/SearchBox.tsx#SearchBox"]={docgenInfo:SearchBox.__docgenInfo,name:"SearchBox",path:"../components/src/SearchBox/SearchBox.tsx#SearchBox"})}catch(__react_docgen_typescript_loader_error){}const SearchBox_stories={title:"@essex:components/SearchBox",component:SearchBox,args:{label:"Label",placeholder:"placeholder"}},Primary={name:"SearchBox"};Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"{\n  name: 'SearchBox'\n}",...Primary.parameters?.docs?.source}}}}}]);