[tool.poetry]
name = "reactivedataflow"
version = "0.1.17"
description = "Reactive Dataflow Graphs"
license = "MIT"
authors = ["Chris Trevino <chtrevin@microsoft.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
reactivex = "^4.0.4"
networkx = "^3.3"
pydantic = "^2.7.4"


[tool.poetry.group.dev.dependencies]
ruff = "^0.6.8"
poethepoet = "^0.26.1"
pytest = "^8.2.2"
pyright = "^1.1.366"
coverage = "^7.5.3"
numpy = "<2"
pytest-asyncio = "^0.23.7"
mkdocs-material = "^9.5.39"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.poe.tasks]
_sort_imports = "ruff check --select I --fix . --preview"
_ruff_check = 'ruff check . --preview'
_format_code = "ruff format  . --preview"
_format_check = 'ruff format . --check --preview'

typecheck = "pyright"
check_package_types = "pyright --verifytypes reactivedataflow --ignoreexternal"
check = ['_format_check', '_ruff_check', 'typecheck', 'check_package_types']
fix = "ruff  --preview check --fix ."
fix_unsafe = "ruff check --preview --fix --unsafe-fixes ."
format = ['_sort_imports', '_format_code']
test = "pytest tests"

serve_docs = "mkdocs serve"
build_docs = "mkdocs build"

_test_with_coverage = 'coverage run --source=reactivedataflow -m pytest tests/unit'
_coverage_report = 'coverage report --fail-under=100 --show-missing --omit="reactivedataflow/nodes/node.py,reactivedataflow/types.py,reactivedataflow/config_provider.py,reactivedataflow/callbacks.py"'
_generate_coverage_xml = 'coverage xml --omit="reactivedataflow/nodes/node.py,reactivedataflow/types.py,reactivedataflow/config_provider.py,reactivedataflow/callbacks.py"'
_generate_coverage_html = 'coverage html --omit="reactivedataflow/nodes/node.py,reactivedataflow/types.py,reactivedataflow/config_provider.py,reactivedataflow/callbacks.py"'
test_coverage = [
    '_test_with_coverage',  
    '_generate_coverage_xml',
    '_generate_coverage_html',
    '_coverage_report'
]
test_only = "pytest -v -k"

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
asyncio_mode = "auto"