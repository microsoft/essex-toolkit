[project]
name = "essex-config"
version = "0.0.6"
description = "Python library for creating configuration objects that read from various sources, including files, environment variables, and Azure Key Vault."
authors = [{ name = "Andres Morales", email = "andresmor@microsoft.com"}]
readme = "README.md"
requires-python = ">=3.10"
license = { file = "LICENSE" }
dependencies = [
    "pydantic>=2.7.3",
    "azure-identity>=1.16.0",
    "azure-keyvault-secrets>=4.8.0",
    "rich>=13.7.1",
    "pyaml>=6.0.1",
    "python-dotenv>=1.0.1",
    "toml>=0.10.2",
    "typing-inspect>=0.9.0",
    "typing-extensions>=4.12.2"
]

[tool.uv]
dev-dependencies = [
    "pytest-cov>=6.0.0",
    "pytest-asyncio>=0.24.0",
    "pytest>=8.2.2",
    "ruff>=0.6.8",
    "poethepoet>=0.26.1",
    "pyright>=1.1.365",
    "hatchling>=1.25.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.poe.tasks]
_sort_imports = "ruff check --select I --fix . --preview"
_ruff_check = 'ruff check . --preview'
_format_code = "ruff format  . --preview"
_format_check = 'ruff format . --check --preview'

typecheck = "pyright"
check_package_types = "pyright --verifytypes essex_config --ignoreexternal"
check = ['_format_check', '_ruff_check', 'typecheck', 'check_package_types']
fix = "ruff  --preview check --fix ."
fix_unsafe = "ruff check --preview --fix --unsafe-fixes ."
format = ['_sort_imports', '_format_code']
test = "pytest tests"
test_coverage = "pytest tests --cov-fail-under=96"
test_only = "pytest -v -k"

# https://github.com/microsoft/pyright/blob/9f81564a4685ff5c55edd3959f9b39030f590b2f/docs/configuration.md#sample-pyprojecttoml-file
[tool.pyright]
include = ["essex_config", "tests"]
exclude = ["**/__pycache__"]


[tool.pytest.ini_options]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope="session"
addopts="--cov-config=.coveragerc --cov=essex_config --cov-report=html --cov-report=xml --cov-report=term-missing --cov-branch"
