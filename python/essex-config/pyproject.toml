[tool.poetry]
name = "essex-config"
version = "0.0.4"
description = "Python library for creating configuration objects that read from various sources, including files, environment variables, and Azure Key Vault."
authors = ["Andres Morales <andresmor@microsoft.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
pydantic = "^2.7.3"
azure-identity = "^1.16.0"
azure-keyvault-secrets = "^4.8.0"
rich = "^13.7.1"
pyyaml = "^6.0.1"
python-dotenv = "^1.0.1"
toml = "^0.10.2"
typing-inspect = "^0.9.0"
typing-extensions = "^4.12.2"

[tool.poetry.group.dev.dependencies]
coverage = "^7.5.4"
pytest = "^8.2.2"
ruff = "^0.4.7"
poethepoet = "^0.26.1"
pyright = "^1.1.365"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poe.tasks]
_sort_imports = "ruff check --select I --fix . --preview"
_ruff_check = 'ruff check . --preview'
_format_code = "ruff format  . --preview"
_format_check = 'ruff format . --check --preview'

typecheck = "pyright"
check_package_types = "pyright --verifytypes essex_config --ignoreexternal"
check = ['_format_check', '_ruff_check', 'typecheck', 'check_package_types']
fix = "ruff  --preview check --fix ."
fix_unsafe = "ruff check --preview --fix --unsafe-fixes ."
format = ['_sort_imports', '_format_code']
test = "pytest tests"

_test_with_coverage = 'coverage run --source=essex_config -m pytest tests/unit'
_coverage_report = 'coverage report --fail-under=100 --show-missing --omit="essex_config/doc_gen/__main__.py"'
_generate_coverage_xml = 'coverage xml --omit="essex_config/doc_gen/__main__.py"'
_generate_coverage_html = 'coverage html --omit="essex_config/doc_gen/__main__.py"'
test_coverage = [
    '_test_with_coverage',  
    '_generate_coverage_xml',
    '_generate_coverage_html',
    '_coverage_report'
]
test_only = "pytest -v -k"


[tool.ruff]
target-version = "py310"
extend-include = ["*.ipynb"]

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 20

[tool.ruff.lint]
select = [
    "E4",
    "E7",
    "E9",
    "W291",
    "YTT",
    "T10",
    "ICN",
    "INP",
    "Q",
    "RSE",
    "SLOT",
    "INT",
    "FLY",
    "LOG",
    "C90",
    "T20",
    "D",
    "RET",
    "PD",
    "N",
    "PIE",
    "SIM",
    "S",
    "G",
    "ERA",
    "ASYNC",
    "TID",
    "UP",
    "SLF",
    "BLE",
    "C4",
    "I",
    "F",
    "A",
    "ARG",
    "PTH",
    "RUF",
    "B",
    "TCH",
    "DTZ",
    "PYI",
    "PT",
    "EM",
    "TRY",
    "PERF",
    # "FBT", # use named arguments for boolean flags
    # "TD", # todos
    # "FIX", # fixme
    # "FURB" # preview rules
    # ANN # Type annotations, re-enable when we get bandwidth
]
ignore = [
    # Deprecated Rules
    "ANN101",
    "ANN102",
    # Conflicts with interface argument checking
    "ARG002",
    "ANN204",
    # TODO: Inspect these pandas rules for validity
    "PD002", # prevents inplace=True
    # TODO RE-Enable when we get bandwidth
    "PERF203", # Needs restructuring of errors, we should bail-out on first error
    "C901",    # needs refactoring to remove cyclomatic complexity
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S", "D", "ANN", "T201", "ASYNC", "ARG", "PTH", "TRY"]
"*.ipynb" = ["T201"]

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["input", "id", "bytes"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"


# https://github.com/microsoft/pyright/blob/9f81564a4685ff5c55edd3959f9b39030f590b2f/docs/configuration.md#sample-pyprojecttoml-file
[tool.pyright]
include = ["essex_config", "tests"]
exclude = ["**/__pycache__"]
