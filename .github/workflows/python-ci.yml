name: Python-CI
on:
  push:
    branches: [main]
  pull_request:
    paths:
      - 'python/**/*'
      - '**/*.py'
      - '**/*.toml'
      - .github/workflows/python-ci.yml
env:
  UV_VERSION: "0.6.11"  

jobs:
  docs_build:
    runs-on: ubuntu-latest
    env:
      PYTHON_VERSION: '3.12'

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ env.PYTHON_VERSION}}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION}}

      - name: Install uv
        uses: astral-sh/setup-uv@v2
        with:
          version: ${{ env.UV_VERSION }}

      - name: Install Dependencies
        run: uv sync --locked --all-packages
          
      - name: Essex-Toolkit - Build Docs
        shell: bash
        run: uv run poe build_docs

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
        project: ["reactivedataflow", "fnllm"]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v2
        with:
          version: ${{ env.UV_VERSION }}

      - name: Install Dependencies
        run: uv sync --locked --all-packages
      
      - name: Install Azurite
        if: matrix.project == 'fnllm'
        id: azuright
        uses: potatoqualitee/azuright@v1.1

      - name: ${{ matrix.project }} - Check
        working-directory: ./python/${{ matrix.project }}
        run: |
          uv run poe check

      - name: ${{ matrix.project }} - Test
        working-directory: ./python/${{ matrix.project }}
        run: |
          uv run poe test_coverage
